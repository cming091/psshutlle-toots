# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from psgrpc.common  import routing_pb2 as routing__pb2


class RoutingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryOriginalStation = channel.unary_unary(
                '/warebasic.RoutingService/QueryOriginalStation',
                request_serializer=routing__pb2.QueryOriginalStationRequest.SerializeToString,
                response_deserializer=routing__pb2.QueryOriginalStationResponse.FromString,
                )
        self.QueryNextStation = channel.unary_unary(
                '/warebasic.RoutingService/QueryNextStation',
                request_serializer=routing__pb2.QueryNextStationRequest.SerializeToString,
                response_deserializer=routing__pb2.QueryNextStationResponse.FromString,
                )
        self.QueryRoutingChains = channel.unary_unary(
                '/warebasic.RoutingService/QueryRoutingChains',
                request_serializer=routing__pb2.QueryRoutingChainsRequest.SerializeToString,
                response_deserializer=routing__pb2.QueryRoutingChainsResponse.FromString,
                )
        self.QueryNextRegion = channel.unary_unary(
                '/warebasic.RoutingService/QueryNextRegion',
                request_serializer=routing__pb2.QueryNextRegionRequest.SerializeToString,
                response_deserializer=routing__pb2.QueryNextRegionResponse.FromString,
                )


class RoutingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryOriginalStation(self, request, context):
        """查询起始工作站
        """
        context.set_code(psgrpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryNextStation(self, request, context):
        """查询下一个工作站
        """
        context.set_code(psgrpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryRoutingChains(self, request, context):
        """查询工艺路径
        """
        context.set_code(psgrpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryNextRegion(self, request, context):
        """查询下一个子仓
        """
        context.set_code(psgrpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoutingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryOriginalStation': psgrpc.unary_unary_rpc_method_handler(
                    servicer.QueryOriginalStation,
                    request_deserializer=routing__pb2.QueryOriginalStationRequest.FromString,
                    response_serializer=routing__pb2.QueryOriginalStationResponse.SerializeToString,
            ),
            'QueryNextStation': psgrpc.unary_unary_rpc_method_handler(
                    servicer.QueryNextStation,
                    request_deserializer=routing__pb2.QueryNextStationRequest.FromString,
                    response_serializer=routing__pb2.QueryNextStationResponse.SerializeToString,
            ),
            'QueryRoutingChains': psgrpc.unary_unary_rpc_method_handler(
                    servicer.QueryRoutingChains,
                    request_deserializer=routing__pb2.QueryRoutingChainsRequest.FromString,
                    response_serializer=routing__pb2.QueryRoutingChainsResponse.SerializeToString,
            ),
            'QueryNextRegion': psgrpc.unary_unary_rpc_method_handler(
                    servicer.QueryNextRegion,
                    request_deserializer=routing__pb2.QueryNextRegionRequest.FromString,
                    response_serializer=routing__pb2.QueryNextRegionResponse.SerializeToString,
            ),
    }
    generic_handler = psgrpc.method_handlers_generic_handler(
            'warebasic.RoutingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoutingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryOriginalStation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return psgrpc.experimental.unary_unary(request, target, '/warebasic.RoutingService/QueryOriginalStation',
                                               routing__pb2.QueryOriginalStationRequest.SerializeToString,
                                               routing__pb2.QueryOriginalStationResponse.FromString,
                                               options, channel_credentials,
                                               insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryNextStation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return psgrpc.experimental.unary_unary(request, target, '/warebasic.RoutingService/QueryNextStation',
                                               routing__pb2.QueryNextStationRequest.SerializeToString,
                                               routing__pb2.QueryNextStationResponse.FromString,
                                               options, channel_credentials,
                                               insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryRoutingChains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return psgrpc.experimental.unary_unary(request, target, '/warebasic.RoutingService/QueryRoutingChains',
                                               routing__pb2.QueryRoutingChainsRequest.SerializeToString,
                                               routing__pb2.QueryRoutingChainsResponse.FromString,
                                               options, channel_credentials,
                                               insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryNextRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return psgrpc.experimental.unary_unary(request, target, '/warebasic.RoutingService/QueryNextRegion',
                                               routing__pb2.QueryNextRegionRequest.SerializeToString,
                                               routing__pb2.QueryNextRegionResponse.FromString,
                                               options, channel_credentials,
                                               insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
